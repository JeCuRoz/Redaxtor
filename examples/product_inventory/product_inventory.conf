# the title of the report
title Product Inventory

# text explaining the purpose of this file
description
This is a test report
/description

# encoding of the input data file, optional
# allowed: ascii, utf-8, utf-16, latin-1
# default: utf-8
# showed here as example
encoding utf-8

# widths of the columns of the excel file
columns_width 17 20 10 10 10 10 10 12 12

# lines starting with theese patterns are ignored
# usually not necessary, showed here as example
exclude_filters "^==*","^--*"

# styles of the cells of the excel file
style category_field  # name of the style
    color white  # color of the text font by name
    background black  # background color by name
    align center  # horizontal align of the cell
    bold  # bold text
    underline  # underline text

style header_field
    color white  
    background gray  
    align center  
    italic  # italic text 
    border thin  # cell border
    
style footer_field
    color white
    background 85BDEF  # color by RRGGBB value without leading # character
    bold
    italic 

style integer_footer
    format "#,##0"  # numeric cell format -> https://xlsxwriter.readthedocs.org/format.html#set_num_format
    color white
    background 85BDEF
    bold
    italic 

style decimal_footer
    format "#,##0.00"
    color white
    background 85BDEF
    bold
    italic 

style products
    align right

style sizes
    align center

style units
    format "#,##0"
    bold  

style decimal
    format "#,##0.00"

style amount
    format "#,##0.00"
    background 8ABAB0
    color 000000
    bold

style net_amount
    format "#,##0.00"
    bold

section

    body
        # each fieldSet represents a row
        # you can have several fieldSet's, each one with its own includeFilters
        fieldset
            include_filters "^Category: "  # processes the lines that match this pattern, you can use several patterns separated by commas
            const "Category/Categoría" : category_field  # const field with the category_field style applied
            string 10 40 as category : category_field  # string extracted from the original data field, trailing spaces are removed

section

    blank_row  # add a blank row after the section

    header  # the header of the section, optional
        fieldset
            const "Code" : header_field  # Constant (a string in this case) added to the output data
            const "Product" : header_field
            const "Color" : header_field
            const "Size" : header_field
            const "Units" : header_field
            const "Price" : header_field
            const "Discount" : header_field
            const "Amount" : header_field
            const "Net Amount" : header_field
        fieldset
            const "Código" : header_field  # Constant (a string in this case) added to the output data
            const "Producto" : header_field
            const "Color" : header_field
            const "Talla" : header_field
            const "Unidades" : header_field
            const "Precio" : header_field
            const "Descuento" : header_field
            const "Importe" : header_field
            const "Importe Neto" : header_field

    body  # the body of the section, mandatory
        fieldset
            include_filters "^[ ]*\d{6} "
            string 4 10 as code
            string 11 21 as product : products
            string 22 29 as color
            string 30 33 as size : sizes
            integer 38 47 as units : units  # integer number extracted from the original data field
            decimal 48 58 as price : decimal  # decimal number extracted from the original data field
            decimaldc 59 70 as discount : decimal
            function =<col:-3><row>*<col:-2><row> as amount : amount   # calculated field, this field is not part of the original data file
            function =<col:-1><row>*(1-(<col:-2><row>/100)) as net_amount : net_amount

    footer  # the footer of the section, optional
        fieldset
            empty 3 as vacio: footer_field # add three empty cells
            const "Total" : footer_field
            function =sum(<col><startrow>:<col><rows>) : integer_footer
            empty 2 : footer_field 
            function =sum(<col><startrow>:<col><rows>) : decimal_footer
            function =sum(<col><startrow>:<col><rows>) : decimal_footer
        fieldset
            empty 3 : footer_field # add three empty cells
            const "Total2" : footer_field
            function =average(<col><startrow>:<col><row:-2>) : integer_footer
            empty 2 : footer_field
            function =min(<col><startrow>:<col><row:-2>) : decimal_footer
            function =max(<col><startrow>:<col><row:-2>) : decimal_footer
